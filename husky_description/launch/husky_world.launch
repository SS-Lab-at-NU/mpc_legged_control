<launch>
    <arg name="robot_type" value="husky"/>
    
    <param name="legged_robot_description" command="xacro $(find husky_description)/urdf/husky.xacro
       robot_type:=$(arg robot_type)
    "/>
    
    <param name="robot_description" command="xacro $(find husky_description)/urdf/husky.xacro
       robot_type:=$(arg robot_type)
    "/>
    
    <node name="generate_urdf" pkg="husky_description" type="generate_urdf.sh" output="screen"
          args="$(find husky_description)/urdf/husky.xacro $(arg robot_type)"/>

    <rosparam file="$(find husky_description)/config/husky_config.yaml" command="load"/>
    
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(find husky_description)/worlds/empty_world.world"/>
        <arg name="paused" value="true"/>
    </include>
    
    <!-- push robot_description to factory and spawn robot in gazebo -->
    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" clear_params="true"
        args="-z 0.25 -param legged_robot_description -urdf -model $(arg robot_type)" output="screen"/>
        
      <!--load controllers-->
    <node name = "controller_spawner" pkg = "controller_manager" type="spawner" ns="/husky" args = "joint_state_controller fr_hip_frontal_position_controller fr_hip_sagittal_position_controller fr_knee_position_controller br_hip_frontal_position_controller br_hip_sagittal_position_controller br_knee_position_controller fl_hip_frontal_position_controller fl_hip_sagittal_position_controller fl_knee_position_controller bl_hip_frontal_position_controller bl_hip_sagittal_position_controller bl_knee_position_controller">
    </node>
        
    <!--keyboard reader, position locker, keyboard navigation and controller switcher-->
    <node pkg="husky_description" name="lock_legs" type="position_control.py" output="screen"/>
    <node pkg="husky_description" name="keyboard_control" type="keyboard_control.py" output="screen"/>
            
</launch>
